#!/bin/bash
#$ -S "/bin/bash"
#$ -cwd
#$ -o "job.stdout"
#$ -e "job.stderr"
#$ -l m_mem_free=32.0G
#$ -l h_rt=128:0:0
#$ -q noble-long.q

hostname
date
echo PID=$$

if [[ `uname` == "Linux" ]]; then
    source ~/.bashrc
elif [[ `uname` == "Darwin" ]]; then
    source ~/.bash_profile
fi

if [[ -e /etc/profile.d/modules.sh ]]; then
  source /etc/profile.d/modules.sh
  module load modules modules-init modules-gs modules-noble
fi

# These three options make it harder to for some part of a script to
# fail without you recognizing it. nounset means that references to an
# unset variable result in an error. This means that you can no longer
# do stuff like this if VAR is potentially unset, because "$VAR" returns
# an error rather than "":
#
# if [ "$VAR" ]; then
#
# fi
#
# To explicitly indicate that you are OK with the variable potentially
# being empty you can instead use ${VAR:-}.

# To avoid errexit for a single command, use "|| true", e.g.,
#    diff foo foobar || true

set -o nounset
set -o pipefail
set -o errexit 
set -o xtrace

rootdir=wnoble@nexus.gs.washington.edu:/net/noble/vol1/data/crux-datasets/2017tran-denovo

mkdir -p Apis-mellifera
scp $rootdir/Apis-mellifera/BC-2.mgf \
    $rootdir/Apis-mellifera/M-3.mgf \
    $rootdir/Apis-mellifera/S-1.mgf \
    Apis-mellifera

mkdir -p Candidatus-endoloripes
scp $rootdir/Candidatus-endoloripes/Run1_82-g1_2000ng.mgf \
    $rootdir/Candidatus-endoloripes/Run1_85-g1_2000ng.mgf \
    $rootdir/Candidatus-endoloripes/Run2_83-g1_2000ng.mgf \
    Candidatus-endoloripes

mkdir -p Saccharomyces-cerevisiae
scp $rootdir/Saccharomyces-cerevisiae/BY_04_NaN3_2.mgf \
    $rootdir/Saccharomyces-cerevisiae/delPBP1_DB_NaN3_3.mgf \
    $rootdir/Saccharomyces-cerevisiae/delPBP1_SM_1.mgf \
    Saccharomyces-cerevisiae

mkdir -p genomes
scp $rootdir/genomes/Apis-mellifera.fasta \
    $rootdir/genomes/Candidatus-endoloripes.fasta \
    $rootdir/genomes/Saccharomyces-cerevisiae.fasta \
    genomes
